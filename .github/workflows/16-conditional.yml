name: 16 - Conditional

on:
  issues:
    types: [opened]
  workflow_dispatch:

jobs:
  job1:
    runs-on: ubuntu-latest
    steps:
      - name: handle-all-issues
        run: echo "This step runs for all issues"
      
      - if: startsWith(github.event.issue.title, 'bug')
        name: handle-bug-reports
        run: echo "This step runs only for bug reports"
      
      - if: startsWith(github.event.issue.title, 'feature request')
        name: handle-feature-requests
        run: echo "This step runs only for feature requests"
        
      - name: Create file status_job1.txt and write the job status into it
        if: always()
        run: |
          echo ${{ job.status }} > status_job1.txt
        
      - name: Upload file status_job1.txt as an artifact
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: pass_status_job1
          path: status_job1.txt

  job2:
    runs-on: ubuntu-latest
    needs: job1
    continue-on-error: true
    steps:
      - if: true
        name: step-1
        run: echo "Step 1"
      - if: always()
        name: step-2
        run: echo "Step 2"
      - if: 1 == 1
        name: step-3
        run: echo "Step 3"
      - if: startsWith('foo', 'f')
        name: step-4
        run: echo "Step 4"
      - run: cat ERROR.md
      - name: Create file status_job2.txt and write the job status into it
        if: always()
        run: |
          echo ${{ job.status }} > status_job2.txt
      - name: Upload file status_job2.txt as an artifact
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: pass_status_job2
          path: status_job2.txt
        
  job3:
      runs-on: ubuntu-latest
      needs: job2
      if: always()
      steps:
         - run: echo "THis command will always be executed even if previous job2 fails"
         - name: Create file status_job3.txt and write the job status into it
           if: always()
           run: |
            echo ${{ job.status }} > status_job3.txt
         - name: Upload file status_job3.txt as an artifact
           if: always()
           uses: actions/upload-artifact@v1
           with:
            name: pass_status_job3
            path: status_job3.txt

  job4:
    runs-on: ubuntu-latest
    needs: [job1, job2, job3]
    if: always()
    steps:
      - name: Download artifact pass_status_job1
        uses: actions/download-artifact@v1
        with:
          name: pass_status_job1

      - name: Download artifact pass_status_job2
        uses: actions/download-artifact@v1
        with:
          name: pass_status_job2
          
      - name: Download artifact pass_status_job3
        uses: actions/download-artifact@v1
        with:
          name: pass_status_job3

      - name: Set the statuses of Job 1, Job 2, Job3 as output parameters
        id: set_outputs
        run: |
          echo "::set-output name=status_job1::$(<pass_status_job1/status_job1.txt)"
          echo "::set-output name=status_job2::$(<pass_status_job2/status_job2.txt)"
          echo "::set-output name=status_job3::$(<pass_status_job3/status_job3.txt)"

      - name: Show the values of the outputs
        run: |
          # using the syntax steps.<step_id>.outputs.<output_name> to access the output parameters
          echo "status_job1 = ${{ steps.set_outputs.outputs.status_job1 }}"
          echo "status_job2 = ${{ steps.set_outputs.outputs.status_job2 }}"
          echo "status_job3 = ${{ steps.set_outputs.outputs.status_job3 }}"
      

  
